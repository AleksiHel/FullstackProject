

@model ManagementViewModel

@{
    var notAnswered = Model.Messages.Count(x => !x.Answered);

}
<form method="get" action="/Management">
    <button class="btn btn-light" type="button" id="unanswered">Show Unanswered</button> 
    <button class="btn btn-light" type="button" id="answered">Show answered</button>
    <button class="btn btn-light" type="button" id="all">Show all</button>

</form>





    @if (notAnswered > 0) {<h2 class="mt-3"> @notAnswered unanswered messages</h2> }
    <table class="table table-hover table-striped table-light mt-3">
    <thead class="thead">
    <tr>
        <th scope="#">Name</th>
            <th scope="#">Email</th>
            <th scope="#">Subject</th>

            <th scope="#">Message</th>
            <th scope="#">Date</th>
            <th scope="#">Status</th>
            <th scope="#">Function</th>
            <th scope="#">Function2</th>
    </tr>
    </thead>
    <tbody>

@foreach (var message in Model.Messages)
{
        <tr>
            <th>@message.FullName</th>
            <th>@message.Email</th>
            <th>@message.Subject</th>
            <th>
                <div class="short-text">@message.ContactMessage.Substring(0, 10)</div>
                <div class="full-text d-none">@message.ContactMessage</div>
            
            </th>


        <th>@message.DateSubmitted.ToShortDateString()</th>
        <th>@(message.Answered ? "answered" : "pending")</th>
                <th>
                    <a href="@(message.Answered ? "#" : "management/markanswered?id=" + message._id)"
                       class="btn btn-dark @(message.Answered ? "disabled" : "")"
                       onclick="@(message.Answered ? "event.preventDefault();" : "")">
                        Mark answered
                    </a>
                </th>
                <th><a href="management/DeleteMessage?id=@message._id" class="btn btn-dark">Delete</a></th>

     </tr>
}

    </tbody>
</table>

<script>

    $("#unanswered").click(function () {
        $.ajax({
            url: '@Url.Action("FilterMessages", "Management")',
            type: 'GET',
            data: { filter: 'unanswered' }, // Pass the filter parameter
            success: function (data) {
                $('#render-container').html(data);
            },
            error: function () {
                alert("Error loading messages.");
            }
        });
    });

    $("#answered").click(function () {
        $.ajax({
            url: '@Url.Action("FilterMessages", "Management")',
            type: 'GET',
            data: { filter: 'answered' }, // Pass the filter parameter
            success: function (data) {
                $('#render-container').html(data);
            },
            error: function () {
                alert("Error loading messages.");
            }
        });
    });

    $("#all").click(function () {
        $.ajax({
            url: '@Url.Action("FilterMessages", "Management")',
            type: 'GET',
            data: { filter: 'all' }, // Pass the filter parameter
            success: function (data) {
                $('#render-container').html(data);
            },
            error: function () {
                alert("Error loading messages.");
            }
        });
    });

    document.querySelectorAll('td').forEach(td => {
        td.addEventListener('click', function () {
            this.querySelector('.short-text').classList.toggle('d-none');
            this.querySelector('.full-text').classList.toggle('d-none');
        });
    });

</script>